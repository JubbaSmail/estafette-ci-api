# https://estafette.io/usage/manifest/#labels
labels:
  app: {{.ApplicationNamePlaceholder}}
  team: {{.TeamNamePlaceholder}}
  language: nodejs

# https://estafette.io/usage/manifest/#versioning
version:
  semver:
    major: 0
    minor: 0

# https://estafette.io/usage/manifest/#build-stages
stages:
  audit:
    image: node:11.8.0-alpine
    commands:
    - npm audit

  restore:
    image: node:11.8.0-alpine
    commands:
    - npm ci

  lint:
    image: node:11.8.0-alpine
    commands:
    - npm run lint

  build:
    image: node:11.8.0-alpine
    commands:
    - npm run build

  # https://estafette.io/usage/extensions/estafette-extensions/#extensions-docker
  bake:
    image: extensions/docker:stable
    action: build
    repositories:
    - {{.DefaultDockerRepository}}
    path: ./publish

  push-to-docker-registry:
    image: extensions/docker:stable
    action: push
    repositories:
    - {{.DefaultDockerRepository}}

  # https://estafette.io/usage/extensions/estafette-extensions/#extensions-slack-build-status
  slack-notify:
    image: extensions/slack-build-status:stable
    workspace: {{.SlackWorkspace}}
    channels:
    - '#builds-${ESTAFETTE_LABEL_TEAM}'
    when:
      status == 'failed'

# https://estafette.io/usage/manifest/#releases
releases:
  development:
    stages:
      deploy:
        image: extensions/gke:stable
        visibility: private
        container:
          port: 5000
          env:
            ENV1: value
          cpu:
            request: 100m
            limit: 100m
          memory:
            request: 256Mi
            limit: 256Mi

      slack-notify:
        image: extensions/slack-build-status:stable
        workspace: {{.SlackWorkspace}}
        channels:
        - '#releases-${ESTAFETTE_LABEL_TEAM}'
        when:
          status == 'failed'

  staging:
    stages:
      # https://estafette.io/usage/extensions/estafette-extensions/#extensions-gke
      deploy:
        image: extensions/gke:stable
        visibility: private
        container:
          port: 5000
          env:
            ENV1: value
          cpu:
            request: 100m
            limit: 100m
          memory:
            request: 256Mi
            limit: 256Mi

      slack-notify:
        image: extensions/slack-build-status:stable
        workspace: {{.SlackWorkspace}}
        channels:
        - '#releases-${ESTAFETTE_LABEL_TEAM}'
        when:
          status == 'failed'

  production:
    # https://estafette.io/usage/manifest/#release-actions
    actions:
    - name: deploy-canary
    - name: deploy-stable
    - name: rollback-canary
    stages:
      deploy:
        image: extensions/gke:stable
        visibility: private
        container:
          port: 5000
          env:
            ENV1: value
          cpu:
            request: 100m
            limit: 100m
          memory:
            request: 256Mi
            limit: 256Mi

      slack-notify:
        image: extensions/slack-build-status:stable
        workspace: {{.SlackWorkspace}}
        channels:
        - '#releases-${ESTAFETTE_LABEL_TEAM}'
        when:
          status == 'succeeded' ||
          status == 'failed'