integrations:
  github:
    privateKeyPath: /secrets/private-key.pem
    appID: {{.GITHUB_APP_ID}}
    clientID: {{.GITHUB_APP_OAUTH_CLIENT_ID}}
    clientSecret: {{.GITHUB_APP_OAUTH_CLIENT_SECRET}}
    webhookSecret: {{.GITHUB_WEBHOOK_SECRET}}
    eventChannelBufferSize: 100
    maxWorkers: 5

  bitbucket:
    apiKey: {{.BITBUCKET_API_KEY}}
    appOAuthKey: {{.BITBUCKET_APP_OAUTH_KEY}}
    appOAuthSecret: {{.BITBUCKET_APP_OAUTH_SECRET}}
    eventChannelBufferSize: 100
    maxWorkers: 5

  slack:
    clientID: {{.SLACK_APP_CLIENT_ID}}
    clientSecret: {{.SLACK_APP_CLIENT_SECRET}}
    appVerificationToken: {{.SLACK_APP_VERIFICATION_TOKEN}}
    appOAuthAccessToken: {{.SLACK_APP_OAUTH_ACCESS_TOKEN}}
    eventChannelBufferSize: 100
    maxWorkers: 5

apiServer:
  baseURL: https://{{.HOSTNAMES}}/
  serviceURL: http://estafette-ci-api/
  eventChannelBufferSize: 100
  maxWorkers: 5

auth:
  iap:
    enable: true
    audience: {{.IAP_AUDIENCE}}
  apiKey: {{.ESTAFETTE_CI_API_KEY}}

database:
  databaseName: {{.COCKROACH_DATABASE}}
  host: {{.COCKROACH_HOST}}
  insecure: {{.COCKROACH_INSECURE}}
  certificateDir: {{.COCKROACH_CERTS_DIR}}
  port: {{.COCKROACH_PORT}}
  user: {{.COCKROACH_USER}}
  password: {{.COCKROACH_PASSWORD}}

credentials:
- name: 'container-registry-{{.CONTAINER_REPOSITORY_1}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_1}}'
  private: false
  username: '{{.CONTAINER_REPOSITORY_USERNAME_1}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_1}}'
- name: 'container-registry-{{.CONTAINER_REPOSITORY_2}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_2}}'
  private: false
  username: '{{.CONTAINER_REPOSITORY_USERNAME_2}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_2}}'
- name: 'container-registry-{{.CONTAINER_REPOSITORY_3}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_3}}'
  private: false
  username: '{{.CONTAINER_REPOSITORY_USERNAME_3}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_3}}'
- name: 'container-registry-{{.CONTAINER_REPOSITORY_4}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_4}}'
  private: true
  username: '{{.CONTAINER_REPOSITORY_USERNAME_4}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_4}}'
- name: 'container-registry-{{.CONTAINER_REPOSITORY_5}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_5}}'
  private: true
  username: '{{.CONTAINER_REPOSITORY_USERNAME_5}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_5}}'
- name: '{{.GKE_CREDENTIAL_1}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_1}}
  cluster: {{.GKE_CLUSTER_1}}
  region: {{.GKE_REGION_1}}
  zone: {{.GKE_ZONE_1}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_1}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_1}}
- name: '{{.GKE_CREDENTIAL_2}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_2}}
  cluster: {{.GKE_CLUSTER_2}}
  region: {{.GKE_REGION_2}}
  zone: {{.GKE_ZONE_2}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_2}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_2}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_2}}
    sidecar:
      type: openresty
      image: {{.GKE_DEFAULT_SIDECAR_IMAGE_2}}
    autoscale:
      min: 1
      max: 5
- name: '{{.GKE_CREDENTIAL_3}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_3}}
  cluster: {{.GKE_CLUSTER_3}}
  region: {{.GKE_REGION_3}}
  zone: {{.GKE_ZONE_3}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_3}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_3}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_3}}
    sidecar:
      type: openresty
      image: {{.GKE_DEFAULT_SIDECAR_IMAGE_3}}
    autoscale:
      min: 2
      max: 10
- name: '{{.GKE_CREDENTIAL_4}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_4}}
  cluster: {{.GKE_CLUSTER_4}}
  region: {{.GKE_REGION_4}}
  zone: {{.GKE_ZONE_4}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_4}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_4}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_4}}
    sidecar:
      type: openresty
      image: {{.GKE_DEFAULT_SIDECAR_IMAGE_4}}
    autoscale:
      min: 3
      max: 500
- name: {{.SLACK_WEBHOOK_NAME_1}}
  type: slack-webhook
  workspace: {{.SLACK_WEBHOOK_WORKSPACE_1}}
  webhook: {{.SLACK_WEBHOOK_WEBHOOK_1}}
- name: {{.SLACK_WEBHOOK_NAME_2}}
  type: slack-webhook
  workspace: {{.SLACK_WEBHOOK_WORKSPACE_2}}
  webhook: {{.SLACK_WEBHOOK_WEBHOOK_2}}
- name: {{.NUGET_SERVER_NAME_1}}
  type: nuget-server
  apiUrl: {{.NUGET_SERVER_API_URL_1}}
  apiKey: {{.NUGET_SERVER_API_KEY_1}}

trustedImages:
- path: extensions/git-clone
  injectedCredentialTypes:
  - bitbucket-api-token
  - github-api-token
- path: extensions/docker
  runDocker: true
  injectedCredentialTypes:
  - container-registry
- path: extensions/gke
  injectedCredentialTypes:
  - kubernetes-engine
- path: extensions/bitbucket-status
  injectedCredentialTypes:
  - bitbucket-api-token
- path: extensions/github-status
  injectedCredentialTypes:
  - github-api-token
- path: extensions/slack-build-status
  injectedCredentialTypes:
  - slack-webhook
- path: extensions/dotnet
  injectedCredentialTypes:
  - nuget-server
- path: estafette/estafette-ci-builder
  runPrivileged: true
- path: docker
  runDocker: true
- path: golang
  runDocker: true
  allowCommands: true

registryMirror: {{.REGISTRY_MIRROR}}