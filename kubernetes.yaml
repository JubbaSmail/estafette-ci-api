apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${APP_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
    team: ${TEAM_NAME}
---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
    team: ${TEAM_NAME}
    scope: public
  annotations:
    prometheus.io/probe: "true"
    prometheus.io/probe-path: "/readiness"
    estafette.io/cloudflare-dns: "true"
    estafette.io/cloudflare-proxy: "true"
    estafette.io/cloudflare-hostnames: "${HOSTNAMES}"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: https
    protocol: TCP
  selector:
    app: ${APP_NAME}
---
apiVersion: v1
kind: Secret
metadata:
  name: ${APP_NAME}-letsencrypt-certificate
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
    team: ${TEAM_NAME}
  annotations:
    estafette.io/letsencrypt-certificate: "true"
    estafette.io/letsencrypt-certificate-hostnames: "${HOSTNAMES}"
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: ${APP_NAME}-github-app-key
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
    team: ${TEAM_NAME}
type: Opaque
data:
  private-key.pem: ${GITHUB_APP_PRIVATE_KEY}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ${APP_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
    team: ${TEAM_NAME}
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ${APP_NAME}
  template:
    metadata:
      labels:
        app: ${APP_NAME}
        team: ${TEAM_NAME}
        version: ${VERSION}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9001"
        prometheus.io/scrape-nginx-sidecar: "true"
    spec:
      serviceAccount: ${APP_NAME}
      containers:
      - name: ${APP_NAME}
        image: estafette/estafette-ci-api:${GO_PIPELINE_LABEL}
        imagePullPolicy: Always
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        env:
        - name: "GITHUB_APP_ID"
          value: "${GITHUB_APP_ID}"
        - name: "GITHUB_APP_OAUTH_CLIENT_ID"
          value: "${GITHUB_APP_OAUTH_CLIENT_ID}"
        - name: "GITHUB_APP_OAUTH_CLIENT_SECRET"
          value: "${GITHUB_APP_OAUTH_CLIENT_SECRET}"
        - name: "GITHUB_WEBHOOK_SECRET"
          value: "${GITHUB_WEBHOOK_SECRET}"
        - name: "BITBUCKET_API_KEY"
          value: "${BITBUCKET_API_KEY}"
        - name: "BITBUCKET_APP_OAUTH_KEY"
          value: "${BITBUCKET_APP_OAUTH_KEY}"
        - name: "BITBUCKET_APP_OAUTH_SECRET"
          value: "${BITBUCKET_APP_OAUTH_SECRET}"
        - name: "ESTAFETTE_CI_SERVER_BASE_URL"
          value: "https://${HOSTNAMES}/"
        - name: "ESTAFETTE_CI_API_KEY"
          value: "${ESTAFETTE_CI_API_KEY}"
        - name: "SLACK_APP_CLIENT_ID"
          value: "${SLACK_APP_CLIENT_ID}"
        - name: "SLACK_APP_CLIENT_SECRET"
          value: "${SLACK_APP_CLIENT_SECRET}"
        - name: "SLACK_APP_VERIFICATION_TOKEN"
          value: "${SLACK_APP_VERIFICATION_TOKEN}"
        - name: "SLACK_APP_OAUTH_ACCESS_TOKEN"
          value: "${SLACK_APP_OAUTH_ACCESS_TOKEN}"
        - name: "SECRET_DECRYPTION_KEY"
          value: "${SECRET_DECRYPTION_KEY}"
        ports:
        - name: api
          containerPort: 5000
        - name: prometheus
          containerPort: 9001
        volumeMounts:
        - name: github-app-key
          mountPath: /github-app-key
        livenessProbe:
          httpGet:
            path: /liveness
            port: api
          initialDelaySeconds: 30
          timeoutSeconds: 1
      - name: ${APP_NAME}-nginx
        image: estafette/nginx-sidecar:1.12.1
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 50m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: nginx-liveness
          containerPort: 82
        - name: nginx-readiness
          containerPort: 81
        - name: nginx-prom
          containerPort: 9101
        env:
        - name: "OFFLOAD_TO_HOST"
          value: "localhost"
        - name: "OFFLOAD_TO_PORT"
          value: "5000"
        - name: "SERVICE_NAME"
          value: "${APP_NAME}"
        - name: "NAMESPACE"
          value: "${NAMESPACE}"
        - name: "HEALT_CHECK_PATH"
          value: "/readiness"
        - name: "ALLOW_CIDRS"
          value: "${ALLOW_CIDRS}"
        volumeMounts:
        - name: ssl-certificate
          mountPath: /etc/ssl/private
        livenessProbe:
          httpGet:
            path: /liveness
            port: nginx-liveness
          initialDelaySeconds: 15
        readinessProbe:
          httpGet:
            path: /readiness
            port: nginx-readiness
      volumes:
      - name: ssl-certificate
        secret:
          secretName: ${APP_NAME}-letsencrypt-certificate
      - name: github-app-key
        secret:
          secretName: ${APP_NAME}-github-app-key
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ${APP_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
    team: ${TEAM_NAME}
spec:
  scaleTargetRef:
    kind: Deployment
    name: ${APP_NAME}
  minReplicas: ${MIN_PODS}
  maxReplicas: ${MAX_PODS}
  targetCPUUtilizationPercentage: ${AUTOSCALE_CPU_TARGET_PERCENTAGE}